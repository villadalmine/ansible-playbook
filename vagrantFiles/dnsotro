Vagrant.configure("2") do |config|
  N = 1

  VAGRANT_VM_PROVIDER = "virtualbox"
  ANSIBLE_RAW_SSH_ARGS = []

  (1..N-1).each do |machine_id|
    ANSIBLE_RAW_SSH_ARGS << "-o IdentityFile=.vagrant/machines/machine#{machine_id}/#{VAGRANT_VM_PROVIDER}/private_key"
  end

  (1..N).each do |machine_id|
    config.vm.define "machine#{machine_id}" do |machine|
      config.vm.network "public_network", bridge: "enp0s20u2u1u4", use_dhcp_assigned_default_route: true
      machine.vm.box = "centos/7"
      machine.vm.hostname = "machine#{machine_id}"
      machine.vm.network "public_network", bridge: "enp0s20u2u1u4", use_dhcp_assigned_default_route: true
      #machine.vm.network "private_network", ip: "192.168.77.#{10+machine_id-1}"

      # Only execute once the Ansible provisioner,
      # when all the machines are up and ready.
      if machine_id == N
        machine.vm.provision :ansible do |ansible|
          # Disable default limit to connect to all the machines
          ansible.limit = "all"
          ansible.playbook = "../playbook/dns.yml"
          #ansible.inventory_path = "staging"
          ansible.verbose = "-vvvvv"
          ansible.raw_ssh_args = ANSIBLE_RAW_SSH_ARGS
	  #  ansible.groups = {
          #  "dnsmaster" => ["machine1"]
      #"dnsslave" => ["machine2"],
      #"machines" => ["machine[1:2]"],
      #"group4" => ["other_node-[a:d]"], # silly group definition
      #"all_groups:children" => ["dnsmaster", "dnsslave"],
      #"group1:vars" => {"variable1" => 9,
      #                  "variable2" => "example"}
        end
      end
    end
  end
end
